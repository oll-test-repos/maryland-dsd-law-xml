build_cloud: Ubuntu-OLL
image: Ubuntu

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

init:
  - sh: |
      if [[ "${IS_DEVELOPMENT}" == "True" ]]; then
        IMAGE_NAME="ghcr.io/tiberlas/test:latest";
        CONTAINER_NAME="oll-archive-automation-dev-${APPVEYOR_PROJECT_SLUG}-${APPVEYOR_BUILD_NUMBER}";
      else
        IMAGE_NAME="ghcr.io/openlawlibrary/archive-automation-prod:latest";
        CONTAINER_NAME="oll-archive-automation-prod-${APPVEYOR_PROJECT_SLUG}-${APPVEYOR_BUILD_NUMBER}";
      fi

before_build:
  - sh: |
      if docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME" > /dev/null 2>&1; then
        if [[ "$(docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME")" == "running" ]]; then
          echo "> CONTAINER ${CONTAINER_NAME} IS RUNNING!";
          exit 1;
        else
          echo "> CONTAINER ${CONTAINER_NAME} ALREADY EXISTS; REMOVING IT";
          docker rm $CONTAINER_NAME;
        fi
      fi
  - sh: |
      if docker image inspect "${IMAGE_NAME}" > /dev/null 2>&1; then
        docker image rm $IMAGE_NAME;
      fi
  - sh: |
      docker login --username tiberlas --password $GH_TOKEN ghcr.io
  - sh: |
      docker pull $IMAGE_NAME
  - sh: |
      touch env.list
      echo "GH_SSH_PRIVATE_KEY" >> env.list
      echo "TIMESTAMP_KEY" >> env.list
      echo "SNAPSHOT_KEY" >> env.list
      echo "APPVEYOR_REPO_NAME" >> env.list
      echo "APPVEYOR_REPO_COMMIT" >> env.list
      echo "PIP_INDEX_URL" >> env.list
      echo "PIP_EXTRA_INDEX_URL" >> env.list
      echo "PLATFORM_BRANCH" >> env.list
      echo "FUSE_BRANCH" >> env.list
      echo "CLIENT_ID" >> env.list
      echo "TENANT_ID" >> env.list
      echo "CLIENT_SECRET" >> env.list
      echo "PREPARE_BUILD_COMMAND" >> env.list
      echo "IS_PUBLISH" >> env.list
  - sh: |
      for var in $(declare -p | grep "^declare \-" | cut -d' ' -f3-); do
        if [[ $var =~ ^PIN ]]; then
          echo "${var}" >> env.list
        fi
      done

build_script:
  - sh: |
      docker run --rm \
        --env-file env.list \
        --device=/dev/ttyUSB0 \
        --name "${CONTAINER_NAME}" --cap-add SYS_ADMIN --privileged "${IMAGE_NAME}"

on_finish:
  - sh: |
      if docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME" > /dev/null 2>&1; then
        docker rm $CONTAINER_NAME;
      fi

notifications:
  - provider: Slack
    incoming_webhook:
      # post to the fire channel
      secure: KUaR+KAqX1jU0LF7kRDKHHGEAoItFzIHSjcreyRvnrRGMiSObCLPipW6KJUwvpl7CEWa8PP2LPzgiQssPcUWLCzoIVY+NvucTI+1NJ0H7GM=
    on_build_success: false
